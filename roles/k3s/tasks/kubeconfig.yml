---

- name: Slurp generated server config
  slurp:
    src: /etc/rancher/k3s/k3s.yaml
  register: k3s_yaml
  when: k3s_primary_control_node is defined and k3s_primary_control_node

- name: Convert kubeconfig to YAML
  set_fact:
    kubeconfig: "{{ k3s_yaml.content | b64decode | from_yaml }}"
  when: k3s_primary_control_node is defined and k3s_primary_control_node

- name: Override server address in kubeconfig
  set_fact:
    kubeconfig_final: "{{ kubeconfig | combine(override_clusters, recursive=true) }}"
  vars:
    cluster_infos: "{{ kubeconfig['clusters'][0] }}"
    cluster_address: "{{ { 'cluster': { 'server': 'https://' + k3s_registration_address + ':' + (k3s_control_plane_port | default(6443) | string) } } }}"
    override_clusters: "{{ { 'clusters': [  cluster_infos | combine(cluster_address, recursive=True) ] } }}"
  when: k3s_primary_control_node is defined and  k3s_primary_control_node

- name: Write kubeconfig on ansible host
  copy:
    content: "{{ kubeconfig_final | to_nice_yaml(indent=2) }}"
    dest: "{{ lookup('env', 'HOME') }}/.kube/k3s.yaml"
    mode: 0600
  delegate_to: localhost
  connection: local
  vars:
    ansible_become: false
  when: k3s_primary_control_node is defined and  k3s_primary_control_node

- name: Check that all nodes to be ready
  ansible.builtin.shell:
    cmd: "kubectl --kubeconfig={{ lookup('env', 'HOME') }}/.kube/k3s.yaml get nodes"
  changed_when: false
  register: kubectl_get_nodes_result
  until:
    - kubectl_get_nodes_result.rc == 0
    - kubectl_get_nodes_result.stdout.find("NotReady") == -1
  retries: 3
  delay: 15
  connection: local
  delegate_to: localhost
  when: k3s_primary_control_node is defined and  k3s_primary_control_node
  vars:
    ansible_become: false

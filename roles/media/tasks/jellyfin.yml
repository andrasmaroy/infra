---

- name: Add utkuozdemir helm repository
  kubernetes.core.helm_repository:
    name: utkuozdemir
    url: https://utkuozdemir.org/helm-charts

- name: Create persistent volume for config
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: jellyfin-config
        namespace: media
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: longhorn

- name: Create secret for PKCS#12 keystore password
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: letsencrypt-jellyfin-pkcs12
        namespace: media
      type: Opaque
      stringData:
        password: "{{ jellyfin_pkcs12_password }}"

- name: Request certificate
  kubernetes.core.k8s:
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: letsenrypt-jellyfin
        namespace: media
      spec:
        dnsNames:
          - 'jelly.{{ domain_local }}'
        secretName: letsencrypt-jellyfin
        issuerRef:
          name: letsencrypt
          kind: ClusterIssuer
          group: cert-manager.io
        keystores:
          pkcs12:
            create: true
            passwordSecretRef:
              name: letsencrypt-jellyfin-pkcs12
              key: password

- name: Install Jellyfin
  kubernetes.core.helm:
    name: jellyfin
    chart_ref: utkuozdemir/jellyfin
    namespace: media
    chart_version: "{{ jellyfin_chart_version }}"
    update_repo_cache: true
    create_namespace: true
    atomic: true
    values:
      extraVolumeMounts:
        - mountPath: /mnt/tv
          name: media-shows
        - mountPath: /mnt/movies
          name: media-movies
        - mountPath: /etc/ssl/private
          name: certificate
          readOnly: true
      extraVolumes:
        - name: media-shows
          nfs:
            path: /tank/Media/Shows/Complete
            server: nas
        - name: media-movies
          nfs:
            path: /tank/Media/Movies/Complete
            server: nas
        - name: certificate
          secret:
            secretName: letsencrypt-jellyfin
      additionalPorts:
        - name: https
          containerPort: 8920
          protocol: TCP
          hostPort: 8920
      image:
        repository: docker.io/jellyfin/jellyfin
        tag: latest
      persistence:
        config:
          existingClaim: jellyfin-config
      resources:
        limits:
          gpu.intel.com/i915: 1

- name: Add route for Jellyfin
  kubernetes.core.k8s:
    definition:
      apiVersion: gateway.networking.k8s.io/v1alpha2
      kind: HTTPRoute
      metadata:
        name: jellyfin
        namespace: media
      spec:
        parentRefs:
          - name: traefik
            namespace: kube-system
            group: gateway.networking.k8s.io
            kind: Gateway
        hostnames:
          - play.{{ domain_public }}
          - jelly.kubi.{{ domain_local }}
        rules:
          - backendRefs:
              - group: ""
                kind: Service
                name: jellyfin
                namespace: media
                port: 8096
                weight: 1
            matches:
              - path:
                  type: PathPrefix
                  value: /

apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rtorrent-flood
  namespace: media
spec:
  interval: 1m0s
  chart:
    spec:
      chart: app-template
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      version: 2.3.0 # {"$imagepolicy": "flux-system:app-template:tag"}
  values:
    env: {} # Necessary for the generic TZ patch to not fail
    configMaps:
      config:
        enabled: true
        data:
          .rtorrent.rc: |
            session.use_lock.set = no
            method.insert = cfg.basedir,  private|const|string, (cat,(fs.homedir),"/.local/share/rtorrent/")
            method.insert = cfg.download, private|const|string, (cat,"/downloads/","complete/")
            method.insert = cfg.logs,     private|const|string, (cat,(cfg.basedir),"log/")
            method.insert = cfg.logfile,  private|const|string, (cat,(cfg.logs),"rtorrent-",(system.time),".log")
            method.insert = cfg.session,  private|const|string, (cat,(cfg.basedir),".session/")
            fs.mkdir.recursive = (cat,(cfg.basedir))
            fs.mkdir = (cat,(cfg.download))
            fs.mkdir = (cat,(cfg.logs))
            fs.mkdir = (cat,(cfg.session))
            dht.mode.set = disable
            directory.default.set = (cat, (cfg.download))
            encoding.add = utf8
            log.execute = (cat, (cfg.logs), "execute.log")
            network.http.dns_cache_timeout.set = 25
            network.http.max_open.set = 50
            network.max_open_files.set = 600
            network.max_open_sockets.set = 300
            network.port_random.set = no
            network.port_range.set = 15329-15329
            network.scgi.open_local = (cat,(cfg.basedir),rtorrent.sock)
            pieces.memory.max.set = 1800M
            protocol.encryption.set = require,allow_incoming,try_outgoing
            protocol.pex.set = no
            session.path.set = (cat, (cfg.session))
            system.cwd.set = (directory.default)
            system.daemon.set = true
            system.umask.set = 0002
            throttle.max_peers.normal.set = 60
            throttle.max_peers.seed.set = 80
            throttle.max_uploads.global.set = 250
            throttle.max_uploads.set = 100
            throttle.min_peers.normal.set = 20
            throttle.min_peers.seed.set = 30
            trackers.numwant.set = 80
            trackers.use_udp.set = no
            print = (cat, "Logging to ", (cfg.logfile))
            log.open_file = "log", (cfg.logfile)
            log.add_output = "info", "log"
    controllers:
      main:
        pod:
          securityContext:
            fsGroup: 997
            fsGroupChangePolicy: "OnRootMismatch"
        containers:
          main:
            env:
              FLOOD_OPTION_ALLOWEDPATH: "/downloads"
              FLOOD_OPTION_HOST: "0.0.0.0"
              FLOOD_OPTION_PORT: "3000"
              FLOOD_OPTION_RTORRENT: "true"
              HOME: "/config"
              TZ: ${TZ}
            image:
              repository: docker.io/jesec/rtorrent-flood
              tag: master-distroless
              pullPolicy: IfNotPresent
            nameOverride: rtorrent-flood
            ports:
              - containerPort: 15329
                name: bittorrent
                protocol: TCP
              - containerPort: 3000
                name: http
                protocol: TCP
            resources:
              limits:
                memory: 5Gi
              requests:
                memory: 4Gi
                cpu: 50m
            securityContext:
              capabilities:
                drop:
                  - ALL
              readOnlyRootFilesystem: true
              runAsGroup: 997
              runAsNonRoot: true
              runAsUser: 1001
    ingress:
      main:
        annotations:
          hajimari.io/icon: mdi:download-network
          hajimari.io/appName: rTorrent
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.tls: "true"
        enabled: true
        hosts:
          - host: torrent.kubi.${DOMAIN_LOCAL}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
        labels:
          probe: enabled
    persistence:
      config:
        enabled: true
        mountPath: /config
        retain: true
        size: 1Gi
        storageClass: longhorn
      rtorrent-flood-config:
        advancedMounts:
          main:
            main:
              - path: /config/.rtorrent.rc
                subPath: .rtorrent.rc
        enabled: true
        globalMounts: []
        name: rtorrent-flood-config
        type: configMap
      downloads:
        advancedMounts:
          main:
            main:
              - path: /downloads/complete
        enabled: true
        globalMounts: []
        path: /tank/Downloads/Complete
        server: nas
        type: nfs
      ebook:
        advancedMounts:
          main:
            main:
              - path: /downloads/ebook
        enabled: true
        globalMounts: []
        path: /tank/Downloads/Ebook
        server: nas
        type: nfs
      games:
        advancedMounts:
          main:
            main:
              - path: /downloads/games
        enabled: true
        globalMounts: []
        path: /tank/Downloads/Games
        server: nas
        type: nfs
      program:
        advancedMounts:
          main:
            main:
              - path: /downloads/program
        enabled: true
        globalMounts: []
        path: /tank/Downloads/Program
        server: nas
        type: nfs
      movies:
        advancedMounts:
          main:
            main:
              - path: /downloads/movies
        enabled: true
        globalMounts: []
        path: /tank/Media/Movies/Downloads
        server: nas
        type: nfs
      shows:
        advancedMounts:
          main:
            main:
              - path: /downloads/shows
        enabled: true
        globalMounts: []
        path: /tank/Media/Shows/Downloads
        server: nas
        type: nfs
      music:
        advancedMounts:
          main:
            main:
              - path: /downloads/music
        enabled: true
        globalMounts: []
        path: /tank/Media/Music/Downloads
        server: nas
        type: nfs
    service:
      main:
        ports:
          http:
            port: 3000
      bittorrent:
        annotations:
          metallb.universe.tf/allow-shared-ip: "metallb-shared-ip"
        controller: main
        enabled: true
        externalIPs:
          - ${METALLB_ADDRESS}
        ports:
          bittorrent:
            port: 15329
            targetPort: 15329
        type: LoadBalancer
